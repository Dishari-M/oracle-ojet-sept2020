// --------------------------------------------------------------------
// Lab support for calculator project
// -------------------------------------------------------------------- 
     var opa = document.getElementById("ina")
      var opb = document.getElementById("inb")
      var res = document.getElementById("result")

      document.getElementById("submit").onclick = function(){
        /*alert(Number(opa.value) + Number(opb.value))*/
        var element = document.getElementsByName("op")
        var op;
        var value;

        for(i = 0; i < element.length; i++){
            if(element[i].checked){
              op = element[i].value
            }
         }

         //alert(op)

         switch(op){
           case "add": {value = Number(opa.value) + Number(opb.value); break;}
           case "sub": {value = Number(opa.value) - Number(opb.value); break;}
           case "mul": {value = Number(opa.value) * Number(opb.value); break;}
           case "div": {value = Number(opa.value) / Number(opb.value); break;}
         }

         res.innerHTML = value
      }

function AppViewModel() {

            this.firstName = ko.observable("Ram");
            this.lastName = ko.observable("Suryavanshi");
            this.c = "red";

            // KO Computed Property
            this.fullName = ko.computed(function() {
                return this.firstName() + " " + this.lastName();    
            }, this);

            // More behavior
            // Notice that, to read or write an observable's value, you call it as a function.
            this.capitalizeLastName = function() {
                var currentVal = this.lastName();        // Read the current value
                this.lastName(currentVal.toUpperCase()); // Write back a modified value
            };

            
        }

        // Activates knockout.js
        ko.applyBindings(new AppViewModel());

document.getElementById("num").addEventListener("input", tablegen);

// Create a node
            var para = document.createElement("p");
            var textnode = document.createTextNode(n + ' X ' + i + ' = ' + n * i);
            para.appendChild(textnode);
            para.setAttribute("id", toString("node_"+ n + i)); //node_55

            // Add to the parent 
            var parent = document.getElementById("table");
            parent.appendChild(para);


// -----------------------------------------------------------------------------------------------
// Knockout Lab
// ----------------------------------------------------------------------------------------------


    <p>First name: <input data-bind="value: firstName" /></p>
    <p>Last name: <input data-bind="value: lastName" /></p>

    <p>Full name: <strong data-bind="text: fullName"></strong></p>

    <button data-bind="click: capitalizeLastName">Go caps</button>
    
    
    
    
            function AppViewModel() {

            this.firstName = ko.observable("Ram");
            this.lastName = ko.observable("Suryavanshi");
            this.c = "red";

            // KO Computed Property
            this.fullName = ko.computed(function() {
                return this.firstName() + " " + this.lastName();    
            }, this);

            // More behavior
            // Notice that, to read or write an observable's value, you call it as a function.
            this.capitalizeLastName = function() {
                var currentVal = this.lastName();        // Read the current value
                this.lastName(currentVal.toUpperCase()); // Write back a modified value
            };

            
        }

        // Activates knockout.js
        ko.applyBindings(new AppViewModel());
   
